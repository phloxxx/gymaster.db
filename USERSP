USE GYMASTER 
GO

CREATE PROCEDURE SP_INSERTUSER
(
    @USER_FNAME VARCHAR(50),
    @USER_LNAME VARCHAR(30),
    @USERNAME VARCHAR(20),
    @PASSWORD VARCHAR(15),
    @USER_TYPE VARCHAR(10)
)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM [USER] WHERE USERNAME = @USERNAME)
    BEGIN
        RAISERROR('Username already exists. Please choose a different username.', 16, 1);
        RETURN;
    END

    INSERT INTO [USER] (USER_FNAME, USER_LNAME, USERNAME, [PASSWORD], USER_TYPE)
    VALUES 
    (@USER_FNAME, @USER_LNAME, @USERNAME, @PASSWORD, @USER_TYPE)

    SELECT SCOPE_IDENTITY() AS NEWUSERID;
END
GO

CREATE PROCEDURE SP_UPDATEUSER
(
    @USER_ID SMALLINT,
    @USER_FNAME VARCHAR(50) = NULL,
    @USER_LNAME VARCHAR(30) = NULL,
    @USERNAME VARCHAR(20) = NULL,
    @PASSWORD VARCHAR(15) = NULL,
    @USER_TYPE VARCHAR(10) = NULL
)
AS
BEGIN
    IF NOT EXISTS (SELECT 1 FROM [USER] WHERE USER_ID = @USER_ID)
    BEGIN
        RAISERROR('User not found.', 16, 1);
        RETURN;
    END

    IF @USERNAME IS NOT NULL AND 
       EXISTS (SELECT 1 FROM [USER] WHERE USERNAME = @USERNAME AND USER_ID != @USER_ID)
    BEGIN
        RAISERROR('Username already exists. Please choose a different username.', 16, 1);
        RETURN;
    END

    UPDATE [USER]
    SET 
        USER_FNAME = COALESCE(@USER_FNAME, USER_FNAME),
        USER_LNAME = COALESCE(@USER_LNAME, USER_LNAME),
        USERNAME = COALESCE(@USERNAME, USERNAME),
        [PASSWORD] = COALESCE(@PASSWORD, [PASSWORD]),
        USER_TYPE = COALESCE(@USER_TYPE, USER_TYPE)
    WHERE 
        USER_ID = @USER_ID;

    SELECT @@ROWCOUNT AS ROWSAFFECTED;
END
GO
